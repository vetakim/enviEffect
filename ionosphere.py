from numpy import *
from scipy.constants import g, c, R, h as ht

# Высоты
H = arange(60e3, 1000e3)
# Молярная масса воздуха
M = 0.029
# Температура н.у.
T = 293
# Давление атмосферы н.у.
p0 = 10e5
# Плотность потока солнечного излучения на растоянии астрономической
# единицы, Вт/м^2 (солнечная постоянная)
S = 1367
# Коэффициент из барометрической формулы (для краткости) p0 * exp( -b * h )
b = M * g / ( R * T )

# длина волны и интенсивность ультрафиолетового излучения (линия L_alpha
# серии Лаймана водорода)
lya1 = 1215.7e-10
S1 = 2e-4
# длина волны и интенсивность ультрафиолетового излучения (линия L_beta
# серии Лаймана водорода
lya2 = 1025.7e-10
S2 = 3e-5
# длина волны и интенсивность мягкого ренгеновского излучения
lya3 = 100e-10
S3 = 10e-4
# TODO излучение солнца можно вычислить теоретически
def gamma_g(lya):
    '''Коэффициент ослабления за счет рассеяния волны с длигной lya
        NM - число молекул в единице объема, n - коэффициент преломления
    '''
    return 8 * pi ** 3 * ( n ** 2 - 1 ) ** 2 / 3 / NM / lya ** 4

def TEC(h, lya, B, xi=0):
    '''вычисление электронной плотности на высоте h, образующейся под
    воздействием ионизирующего излучения с длиной волны lya, если
    коэффициент поглощения излучения атмосферой B. xi это угол между
    нормалью к поверхности земли и направлением ионизирующего излучения
    '''
    # частота излучения
    nu = c / lya
    # аргумент экспоненты
    arg = B * p0 * exp( -b * h ) / b / cos(xi) + b * h
    # электронная плотность
    Is = B * p0 * S * exp( -arg ) / ht / nu
    return TEC

